# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class RubbiSh < Formula
  desc "Go and Shell helpers to provide a sandbox directory for rubbish."
  homepage "https://github.com/jotadrilo/rubbi-sh"
  version "1.0.0"

  on_macos do
    url "https://github.com/jotadrilo/rubbi-sh/releases/download/v1.0.0/rubbi-sh_1.0.0_darwin_x86_64.tar.gz"
    sha256 "66bc253966d4c9829675aa4369535a20566bfebf41a7a133abf66dedb2f8a73a"

    def install
      bin.install "rubbi-sh"
      (share/"alias").install "dotfiles/.rubbi.sh"
      (share/"alias").install "dotfiles/.rubbi.minimal.sh"
    end

    if Hardware::CPU.arm?
      def caveats
        <<~EOS
          The darwin_arm64 architecture is not supported for the RubbiSh
          formula at this time. The darwin_amd64 binary may work in compatibility
          mode, but it might not be fully supported.
        EOS
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/jotadrilo/rubbi-sh/releases/download/v1.0.0/rubbi-sh_1.0.0_linux_x86_64.tar.gz"
      sha256 "5faf04985ad7b46008778f8b450a9b52ec74b102bce18090162775bc34ffe487"

      def install
        bin.install "rubbi-sh"
        (share/"alias").install "dotfiles/.rubbi.sh"
        (share/"alias").install "dotfiles/.rubbi.minimal.sh"
      end
    end
  end

  def caveats
    <<~EOS
      Please import the .rubbi.sh file in your profile configuration or add its content directly

       . #{(share/"alias")}/.rubbi.sh

      or the .rubbi.minimal.sh for a minimal setup (rbsh shell function only)

       . #{(share/"alias")}/.rubbi.minimal.sh

      This tool is based on some alias and shell functions that are core to work.
    EOS
  end

  test do
    system bin/"rubbi-sh", "-version"
  end
end
